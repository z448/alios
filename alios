#!/bin/bash

paths=();
export_line=();
declare -A ap;
cache=~/.cache.als;

paths=( /var/mobile/Containers/Data/Application/*/Library/Preferences\
        /var/mobile/Containers/Shared/AppGroup/*/Library/Preferences    )
groupid="group"

function check_plist {
    let z=0;
    for i in ${paths[*]}
    do 
        for j in $(find $i | grep -i plist)
        do
            appName=${j##*/}
            if [[ $appName == *"$groupid"* ]];then
                app=${j##*/group.}; app=${app%*.plist};
                subpath="/var/mobile/Containers/Shared/AppGroup/";
            else
                app=${j##*/}; app=${app%*.plist}; 
                subpath="/var/mobile/Containers/Data/Application/";
            fi
                path=$j; 
                name=${app##*.}; 
                uuid=${path%%/Library*}; uuid=${uuid##*/};
                echo -e "\e[1m$app: \e[1m$uuid\e[0m \e[39m$name\e\_\e[30m\e[7m\e[33m $z\e[0m";
                ap[$id'path']="$subpath$uuid"
                ap[$id'open']="$app"
                ap[$id'plist']="$path"
                ap[$id'nr']="$z"
                let "z++";
                declare -p ap >> "$cache"
            done
        done
    }

function map_plist {
   source -- "$cache"
   echo -n 'alias '$2'='"${ap_["$1"]}"
   echo -n $2=
   echo -e 
}


if [ "$1" = "plist" ]; then
    paths=("$2") && check_plist && exit;
elif [ "$1" = "-m" ]; then
   source ~/.alioscache;
    map_plist $2 $3 
else
    check_plist;
#    printf "%s\n" "${cache_apps[@]}" > ~/.alioscache
    printf "%`tput cols`s"|tr ' ' '_'
fi

